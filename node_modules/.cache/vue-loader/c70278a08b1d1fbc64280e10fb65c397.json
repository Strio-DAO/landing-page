{"remainingRequest":"/home/aleksandar/Strio-DAO/landing-page/landing-page/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/aleksandar/Strio-DAO/landing-page/landing-page/src/views/Home.vue?vue&type=template&id=fae5bece&","dependencies":[{"path":"/home/aleksandar/Strio-DAO/landing-page/landing-page/src/views/Home.vue","mtime":1638470246066},{"path":"/home/aleksandar/Strio-DAO/landing-page/landing-page/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aleksandar/Strio-DAO/landing-page/landing-page/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/aleksandar/Strio-DAO/landing-page/landing-page/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/aleksandar/Strio-DAO/landing-page/landing-page/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}